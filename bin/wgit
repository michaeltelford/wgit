#!/usr/bin/env ruby

require "wgit"

# Shorten the filepath for nicer output to the user.
def format_path(dir, path)
  return path.gsub(dir, ".") if dir == Dir.pwd
  return path.gsub(dir, "~") if dir == Dir.home

  path
end

# Load .env file (if it exists somewhere).
def load_env
  begin
    require "dotenv"
  rescue LoadError
    puts "Skipping .env load because 'dotenv' isn't installed"
    puts
    return false
  end

  puts "Searching for .env file in local and home directories..."
  success = false

  [Dir.pwd, Dir.home].each do |dir|
    path = "#{dir}/.env"
    next unless File.exist?(path)

    puts "Loading #{format_path(dir, path)}"
    puts "Call `load_env` after changes to re-load the environment variables"

    Dotenv.load(path)
    success = true

    break
  end

  puts

  success
end

# Eval .wgit.rb file (if it exists somewhere).
def eval_wgit
  puts "Searching for .wgit.rb file in local and home directories..."
  success = false

  [Dir.pwd, Dir.home].each do |dir|
    path = "#{dir}/.wgit.rb"
    next unless File.exist?(path)

    puts "Eval'ing #{format_path(dir, path)}"
    puts "Call `eval_wgit` after changes to re-eval the file"

    eval(File.read(path))
    success = true

    break
  end

  puts

  success
end

# Choose and return which REPL class to use.
# Use Pry if installed or fall back to IRB.
def repl_class
  begin
    require "pry"
    klass = Pry
  rescue LoadError
    require "irb"
    klass = IRB

    puts "Using 'irb' REPL because 'pry' isn't installed"
    puts
  end

  klass
end

### START OF EXECUTABLE ###

load_env
eval_wgit
klass = repl_class

puts Wgit.version_str
puts "#{'-' * Wgit.version_str.size}\n\n"

klass.start

puts "Interactive wgit session complete"
